#! /usr/bin/python2

# SPDX-License-Identifier: MIT
# X-SPDX-Copyright-Text: Copyright (C) 2022, Advanced Micro Devices, Inc.

#
# Regression test for bug61198: pcap_packer crash when do_partial_flush
# finds an empty output buffer
#
# NOTE: Depends on rpkt which lives in /project/hg/incoming/rpkt
#       -- OR -- install a package from misc/apps/rpkt

import os, sys, time
import solar_capture
import rpkt


def main():
    # Generate a PCAP file of exactly 32768 bytes
    packets = rpkt.gen.sequence(4, rate=1000, length=8170)
    pcap_data = rpkt.pcap.make_pcap(packets)

    session = solar_capture.new_session()
    thread = session.new_thread()

    r_fd, w_fd = os.pipe()

    packer_args = {
        'filename': '/dev/null',
        'wait_for_byte_count': 0,
        }

    packer_attr = {
        'buf_size': 32768,
        }

    reader = thread.new_node('sc_reader', args={'fd': r_fd})
    packer = thread.new_node('sc_pcap_packer', args=packer_args,
                             attr=packer_attr)
    exiter = thread.new_node('sc_exit')

    reader.connect(packer).connect(exiter)

    session.go()
    os.write(w_fd, pcap_data)
    time.sleep(2) # allow time for partial flush
    print "Test passed!"
    os.close(w_fd)
    while True:
        time.sleep(1) # wait for EOS to hit exit node


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print e
        sys.exit(1)
